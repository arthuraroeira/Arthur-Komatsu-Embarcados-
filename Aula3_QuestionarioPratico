Data: 14/03/2017

Para todas as questões, compile-as com o gcc e execute-as via terminal.

1. Crie um "Olá mundo!" em C.
programa:

#include<stdio.h>

int main()
{
	printf("Ola mundo!");
	return 0;
}

terminal:

$gcc Questao1.c
$./a.out
$Ola mundo!

2. Crie um código em C que pergunta ao usuário o seu nome, e imprime no terminal "Ola " e o nome do usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_1':
	$ ./ola_usuario_1
	$ Digite o seu nome: Eu
	$ Ola Eu
	$

programa:
#include<stdio.h>

int main()
{
	char Nome[50];
	printf("Digite o seu nome: ");
	scanf("%s", Nome);
	printf("Ola %s",Nome);
	return 0;
}

terminal:
$gcc Questao2.c
$./a.out
$Digite o seu nome: Arthur
$Ola Arthur

3. Apresente os comportamentos do código anterior nos seguintes casos:
	(a) Se o usuário insere mais de um nome.
    $Digite o seu nome: Arthur Komatsu
    $Ola Arthur
    
	(b) Se o usuário insere mais de um nome entre aspas. Por exemplo:
    $Digite o seu nome: "Arthur Komatsu"
    $Ola "Arthur
    
	(c) Se é usado um pipe. Por exemplo:
		$echo Arthur | ./a.out
    $Ola Arthur
    
	(d) Se é usado um pipe com mais de um nome. Por exemplo:
		$echo Arthur Komatsu | ./a.out
    $Ola Arthur
    
	(e) Se é usado um pipe com mais de um nome entre parênteses. Por exemplo:
		$echo "Arthur Komatsu" | ./a.out
    $Ola Arthur
    
	(f) Se é usado o redirecionamento de arquivo. Por exemplo:
		$echo mundo cruel! > ola.txt
		$./a.out < ola.txt
    $Ola mundo

4. Crie um código em C que recebe o nome do usuário como um argumento de entrada (usando as variáveis argc e *argv[]), e imprime no terminal "Ola " e o nome do usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_2':
programa:
#include<stdio.h>

int main(int argc, char *argv[])
{
	printf("Ola %s",argv[1]);
	return 0;
}

terminal
$gcc Questao4.c
$./a.out Arthur
$Ola Arthur

5. Apresente os comportamentos do código anterior nos seguintes casos:
	(a) Se o usuário insere mais de um nome.
		$./a.out Arthur Komatsu
		$Ola Arthur
		
	(b) Se o usuário insere mais de um nome entre aspas. Por exemplo:
		$./a.out "Arthur Komatsu"
		$Ola Arthur
		
	(c) Se é usado um pipe. Por exemplo:
		$echo Arthur | ./a.out
		$Ola (null)
		
	(d) Se é usado um pipe com mais de um nome. Por exemplo:
		$echo Arthur Komatsu | ./a.out
		$Ola (null)
		
	(e) Se é usado um pipe com mais de um nome entre aspas. Por exemplo:
		$echo "Arthur Komatsu" | ./a.out
		$Ola (null)
		
	(f) Se é usado o redirecionamento de arquivo. Por exemplo:
		$echo mundo cruel! > ola.txt
		$./a.out < ola.txt
		$ola (null)

6. Crie um código em C que faz o mesmo que o código da questão 4, e em seguida imprime no terminal quantos valores de entrada foram fornecidos pelo usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_3':

programa:
#include<stdio.h>

int main(int argc, char *argv[])
{
	printf("Ola %s\n Numero de entradas = %d",argv[1],argc);
	return 0;
}

terminal:
$gcc Questao6.c
$./a.out Eu
$Ola Eu
$Numero de entradas = 2


7. Crie um código em C que imprime todos os argumentos de entrada fornecidos pelo usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_argumentos':
programa:
#include<stdio.h>

int main(int argc, char *argv[])
{
	int i;
	printf("Argumentos: ");
	for(i=1;i<argc-1;i++)
		printf("%s ",argv[i]);
	return 0;
}

terminal
$gcc Questao7.c
$./a.out Oi tudo bem
$Argumentos: Oi tudo bem

8. Crie uma função que retorna a quantidade de caracteres em uma string, usando o seguinte protótipo:

	int Num_Caracs(char *string);

Salve-a em um arquivo separado chamado 'num_caracs.c'. Salve o protótipo em um arquivo chamado 'num_caracs.h'. Compile 'num_caracs.c' para gerar o objeto 'num_caracs.o'.

9. Re-utilize o objeto criado na questão 8 para criar um código que imprime cada argumento de entrada e a quantidade de caracteres de cada um desses argumentos. Por exemplo, considerando que o código criado recebeu o nome de 'ola_num_caracs_1':
	$ ./ola_num_caracs_1 Eu Mesmo
	$ Argumento: ./ola_num_caracs_1 / Numero de caracteres: 18
	$ Argumento: Eu / Numero de caracteres: 2
	$ Argumento: Mesmo / Numero de caracteres: 5
	$

10. Crie um Makefile para a questão anterior.

11. Re-utilize o objeto criado na questão 8 para criar um código que imprime o total de caracteres nos argumentos de entrada. Por exemplo, considerando que o código criado recebeu o nome de 'ola_num_caracs_2':
	$ ./ola_num_caracs_2 Eu Mesmo
	$ Total de caracteres de entrada: 25
	$

12. Crie um Makefile para a questão anterior.
